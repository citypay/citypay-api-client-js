/**
 * CityPay Payment API
 *  This CityPay API is a HTTP RESTful payment API used for direct server to server transactional processing. It provides a number of payment mechanisms including: Internet, MOTO, Continuous Authority transaction processing, 3-D Secure decision handling using RFA Secure, Authorisation, Refunding, Pre-Authorisation, Cancellation/Voids and Completion processing. The API is also capable of tokinsed payments using Card Holder Accounts.  ## Compliance and Security Your application will need to adhere to PCI-DSS standards to operate safely and to meet requirements set out by  Visa and MasterCard and the PCI Security Standards Council. These include  * Data must be collected using TLS version 1.2 using [strong cryptography](#enabled-tls-ciphers). We will not accept calls to our API at   lower grade encryption levels. We regularly scan our TLS endpoints for vulnerabilities and perform TLS assessments   as part of our compliance program. * The application must not store sensitive card holder data (CHD) such as the card security code (CSC) or   primary access number (PAN) * The application must not display the full card number on receipts, it is recommended to mask the PAN   and show the last 4 digits. The API will return this for you for ease of receipt creation * If you are developing a website, you will be required to perform regular scans on the network where you host the   application to meet your compliance obligations * You will be required to be PCI Compliant and the application must adhere to the security standard. Further information   is available from [https://www.pcisecuritystandards.org/](https://www.pcisecuritystandards.org/) * The API verifies that the request is for a valid account and originates from a trusted source using the remote IP   address. Our application firewalls analyse data that may be an attempt to break a large number of security common   security vulnerabilities. 
 *
 * Contact: support@citypay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PaylinkCustomParam model module.
 * @module model/PaylinkCustomParam
 */
class PaylinkCustomParam {
    /**
     * Constructs a new <code>PaylinkCustomParam</code>.
     * @alias module:model/PaylinkCustomParam
     * @param name {String} the name of the custom parameter used to converse with the submitter.
     */
    constructor(name) { 
        
        PaylinkCustomParam.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>PaylinkCustomParam</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaylinkCustomParam} obj Optional instance to populate.
     * @return {module:model/PaylinkCustomParam} The populated <code>PaylinkCustomParam</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaylinkCustomParam();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('field_type')) {
                obj['field_type'] = ApiClient.convertToType(data['field_type'], 'String');
            }
            if (data.hasOwnProperty('group')) {
                obj['group'] = ApiClient.convertToType(data['group'], 'String');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('locked')) {
                obj['locked'] = ApiClient.convertToType(data['locked'], 'Boolean');
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = ApiClient.convertToType(data['order'], 'Number');
            }
            if (data.hasOwnProperty('pattern')) {
                obj['pattern'] = ApiClient.convertToType(data['pattern'], 'String');
            }
            if (data.hasOwnProperty('placeholder')) {
                obj['placeholder'] = ApiClient.convertToType(data['placeholder'], 'String');
            }
            if (data.hasOwnProperty('required')) {
                obj['required'] = ApiClient.convertToType(data['required'], 'Boolean');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }


}

/**
 * the name of the custom parameter used to converse with the submitter.
 * @member {String} name
 */
PaylinkCustomParam.prototype['name'] = undefined;

/**
 * the type of html5 field, defaults to 'text'.
 * @member {String} field_type
 */
PaylinkCustomParam.prototype['field_type'] = undefined;

/**
 * a group the parameter is linked with, allows for grouping with a title.
 * @member {String} group
 */
PaylinkCustomParam.prototype['group'] = undefined;

/**
 * a label to show alongside the input.
 * @member {String} label
 */
PaylinkCustomParam.prototype['label'] = undefined;

/**
 * whether the parameter is locked from entry.
 * @member {Boolean} locked
 */
PaylinkCustomParam.prototype['locked'] = undefined;

/**
 * an index order for the parameter.
 * @member {Number} order
 */
PaylinkCustomParam.prototype['order'] = undefined;

/**
 * a regex pattern to validate the custom parameter with.
 * @member {String} pattern
 */
PaylinkCustomParam.prototype['pattern'] = undefined;

/**
 * a placehold value to display in the input.
 * @member {String} placeholder
 */
PaylinkCustomParam.prototype['placeholder'] = undefined;

/**
 * whether the field is required.
 * @member {Boolean} required
 */
PaylinkCustomParam.prototype['required'] = undefined;

/**
 * a default value for the field.
 * @member {String} value
 */
PaylinkCustomParam.prototype['value'] = undefined;






export default PaylinkCustomParam;

