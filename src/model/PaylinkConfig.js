/**
 * CityPay Payment API
 *  This CityPay API is a HTTP RESTful payment API used for direct server to server transactional processing. It provides a number of payment mechanisms including: Internet, MOTO, Continuous Authority transaction processing, 3-D Secure decision handling using RFA Secure, Authorisation, Refunding, Pre-Authorisation, Cancellation/Voids and Completion processing. The API is also capable of tokinsed payments using Card Holder Accounts.  ## Compliance and Security Your application will need to adhere to PCI-DSS standards to operate safely and to meet requirements set out by  Visa and MasterCard and the PCI Security Standards Council. These include  * Data must be collected using TLS version 1.2 using [strong cryptography](#enabled-tls-ciphers). We will not accept calls to our API at   lower grade encryption levels. We regularly scan our TLS endpoints for vulnerabilities and perform TLS assessments   as part of our compliance program. * The application must not store sensitive card holder data (CHD) such as the card security code (CSC) or   primary access number (PAN) * The application must not display the full card number on receipts, it is recommended to mask the PAN   and show the last 4 digits. The API will return this for you for ease of receipt creation * If you are developing a website, you will be required to perform regular scans on the network where you host the   application to meet your compliance obligations * You will be required to be PCI Compliant and the application must adhere to the security standard. Further information   is available from [https://www.pcisecuritystandards.org/](https://www.pcisecuritystandards.org/) * The API verifies that the request is for a valid account and originates from a trusted source using the remote IP   address. Our application firewalls analyse data that may be an attempt to break a large number of security common   security vulnerabilities. 
 *
 * Contact: support@citypay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PaylinkCustomParam from './PaylinkCustomParam';
import PaylinkFieldGuardModel from './PaylinkFieldGuardModel';
import PaylinkPartPayments from './PaylinkPartPayments';
import PaylinkUI from './PaylinkUI';

/**
 * The PaylinkConfig model module.
 * @module model/PaylinkConfig
 */
class PaylinkConfig {
    /**
     * Constructs a new <code>PaylinkConfig</code>.
     * @alias module:model/PaylinkConfig
     */
    constructor() { 
        
        PaylinkConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PaylinkConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaylinkConfig} obj Optional instance to populate.
     * @return {module:model/PaylinkConfig} The populated <code>PaylinkConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaylinkConfig();

            if (data.hasOwnProperty('acs_mode')) {
                obj['acs_mode'] = ApiClient.convertToType(data['acs_mode'], 'String');
            }
            if (data.hasOwnProperty('custom_params')) {
                obj['custom_params'] = ApiClient.convertToType(data['custom_params'], [PaylinkCustomParam]);
            }
            if (data.hasOwnProperty('descriptor')) {
                obj['descriptor'] = ApiClient.convertToType(data['descriptor'], 'String');
            }
            if (data.hasOwnProperty('expire_in')) {
                obj['expire_in'] = ApiClient.convertToType(data['expire_in'], 'String');
            }
            if (data.hasOwnProperty('field_guard')) {
                obj['field_guard'] = ApiClient.convertToType(data['field_guard'], [PaylinkFieldGuardModel]);
            }
            if (data.hasOwnProperty('lock_params')) {
                obj['lock_params'] = ApiClient.convertToType(data['lock_params'], ['String']);
            }
            if (data.hasOwnProperty('merch_logo')) {
                obj['merch_logo'] = ApiClient.convertToType(data['merch_logo'], 'String');
            }
            if (data.hasOwnProperty('merch_terms')) {
                obj['merch_terms'] = ApiClient.convertToType(data['merch_terms'], 'String');
            }
            if (data.hasOwnProperty('options')) {
                obj['options'] = ApiClient.convertToType(data['options'], ['String']);
            }
            if (data.hasOwnProperty('part_payments')) {
                obj['part_payments'] = PaylinkPartPayments.constructFromObject(data['part_payments']);
            }
            if (data.hasOwnProperty('pass_through_data')) {
                obj['pass_through_data'] = ApiClient.convertToType(data['pass_through_data'], {'String': 'String'});
            }
            if (data.hasOwnProperty('pass_through_headers')) {
                obj['pass_through_headers'] = ApiClient.convertToType(data['pass_through_headers'], {'String': 'String'});
            }
            if (data.hasOwnProperty('postback')) {
                obj['postback'] = ApiClient.convertToType(data['postback'], 'String');
            }
            if (data.hasOwnProperty('postback_password')) {
                obj['postback_password'] = ApiClient.convertToType(data['postback_password'], 'String');
            }
            if (data.hasOwnProperty('postback_policy')) {
                obj['postback_policy'] = ApiClient.convertToType(data['postback_policy'], 'String');
            }
            if (data.hasOwnProperty('postback_username')) {
                obj['postback_username'] = ApiClient.convertToType(data['postback_username'], 'String');
            }
            if (data.hasOwnProperty('redirect_delay')) {
                obj['redirect_delay'] = ApiClient.convertToType(data['redirect_delay'], 'Number');
            }
            if (data.hasOwnProperty('redirect_failure')) {
                obj['redirect_failure'] = ApiClient.convertToType(data['redirect_failure'], 'String');
            }
            if (data.hasOwnProperty('redirect_success')) {
                obj['redirect_success'] = ApiClient.convertToType(data['redirect_success'], 'String');
            }
            if (data.hasOwnProperty('renderer')) {
                obj['renderer'] = ApiClient.convertToType(data['renderer'], 'String');
            }
            if (data.hasOwnProperty('return_params')) {
                obj['return_params'] = ApiClient.convertToType(data['return_params'], 'Boolean');
            }
            if (data.hasOwnProperty('ui')) {
                obj['ui'] = PaylinkUI.constructFromObject(data['ui']);
            }
        }
        return obj;
    }


}

/**
 * Specifies the approach to be adopted by the Paylink form when displaying a 3-D Secure challenge window. The values may be  iframe: shows the 3-D Secure ACS in an iframe dialog, neatly embedding it in Paylink. This provides a more seamless flow for the cardholder who is able to validate and authenticate their card using a dialog provided by their card issuer.  inline: an inline mode transfers the full browser window to the authentication server, allowing the payment cardholder to see their payment card issuer's URL and the certificate status in the browser. If you request an iframe mode and the browser width is deemed as being small (< 768px) then an inline mode will be enforced. This is to ensure that mobile users have an improved user experience. 
 * @member {String} acs_mode
 */
PaylinkConfig.prototype['acs_mode'] = undefined;

/**
 * @member {Array.<module:model/PaylinkCustomParam>} custom_params
 */
PaylinkConfig.prototype['custom_params'] = undefined;

/**
 * Directly specify the merchant descriptor used for the transaction to be displayed on the payment page.
 * @member {String} descriptor
 */
PaylinkConfig.prototype['descriptor'] = undefined;

/**
 * Specifies a period of time in seconds after which the token cannot be used. A value of 0 defines that the token will never expire. The API will convert an expiry time based on a string value. For instance:   s - Time in seconds, for example 90s.   m - Time in minutes, for example 20m.   h - Time in hours, for example 4h.   w - Time in weeks, for example 4w.   M - Time in months, for example 6M.   y - Time in years, for example 1y.   Defaults to 30 minutes. 
 * @member {String} expire_in
 */
PaylinkConfig.prototype['expire_in'] = undefined;

/**
 * @member {Array.<module:model/PaylinkFieldGuardModel>} field_guard
 */
PaylinkConfig.prototype['field_guard'] = undefined;

/**
 * @member {Array.<String>} lock_params
 */
PaylinkConfig.prototype['lock_params'] = undefined;

/**
 * A URL of a logo to include in the form. The URL should be delivered using HTTPS.
 * @member {String} merch_logo
 */
PaylinkConfig.prototype['merch_logo'] = undefined;

/**
 * A URL of the merchant terms and conditions for payment. If a value is supplied, a checkbox will be required to be completed to confirm that the cardholder agrees to these conditions before payment. A modal dialogue is displayed with the content of the conditions displayed.
 * @member {String} merch_terms
 */
PaylinkConfig.prototype['merch_terms'] = undefined;

/**
 * @member {Array.<String>} options
 */
PaylinkConfig.prototype['options'] = undefined;

/**
 * @member {module:model/PaylinkPartPayments} part_payments
 */
PaylinkConfig.prototype['part_payments'] = undefined;

/**
 * @member {Object.<String, String>} pass_through_data
 */
PaylinkConfig.prototype['pass_through_data'] = undefined;

/**
 * @member {Object.<String, String>} pass_through_headers
 */
PaylinkConfig.prototype['pass_through_headers'] = undefined;

/**
 * Specifies a URL to use for a call back when the payment is completed. see Postback Handling }.
 * @member {String} postback
 */
PaylinkConfig.prototype['postback'] = undefined;

/**
 * A password to be added to the postback for HTTP Basic Authentication.
 * @member {String} postback_password
 */
PaylinkConfig.prototype['postback_password'] = undefined;

/**
 * The policy setting for the postback see Postback Handling.
 * @member {String} postback_policy
 */
PaylinkConfig.prototype['postback_policy'] = undefined;

/**
 * A username to be added to the postback for HTTP Basic Authentication.
 * @member {String} postback_username
 */
PaylinkConfig.prototype['postback_username'] = undefined;

/**
 * A value which can delay the redirection in seconds. A value of 0 will redirect immediately.
 * @member {Number} redirect_delay
 */
PaylinkConfig.prototype['redirect_delay'] = undefined;

/**
 * A URL which the browser is redirected to on non-completion of a transaction.
 * @member {String} redirect_failure
 */
PaylinkConfig.prototype['redirect_failure'] = undefined;

/**
 * A URL which the browser is redirected to on authorisation of a transaction.
 * @member {String} redirect_success
 */
PaylinkConfig.prototype['redirect_success'] = undefined;

/**
 * The Paylink renderer engine to use.
 * @member {String} renderer
 */
PaylinkConfig.prototype['renderer'] = undefined;

/**
 * If a value of true is specified, any redirection will include the transaction result in parameters. It is recommended to use the postback integration rather than redirection parameters.
 * @member {Boolean} return_params
 */
PaylinkConfig.prototype['return_params'] = undefined;

/**
 * @member {module:model/PaylinkUI} ui
 */
PaylinkConfig.prototype['ui'] = undefined;






export default PaylinkConfig;

