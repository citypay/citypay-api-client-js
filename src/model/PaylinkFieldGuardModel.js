/**
 * CityPay Payment API
 *  This CityPay API is an HTTP RESTful payment API used for direct server to server transactional processing. It provides a number of payment mechanisms including: Internet, MOTO, Continuous Authority transaction processing, 3-D Secure decision handling using RFA Secure, Authorisation, Refunding, Pre-Authorisation, Cancellation/Voids and Completion processing. The API is also capable of tokenized payments using cardholder Accounts.  ## Compliance and Security Your application will need to adhere to PCI-DSS standards to operate safely and to meet requirements set out by  Visa and MasterCard and the PCI Security Standards Council. These include  * Data must be collected using TLS version 1.2 using [strong cryptography](https://citypay.github.io/api-docs/payment-api/#enabled-tls-ciphers). We will not accept calls to our API at   lower grade encryption levels. We regularly scan our TLS endpoints for vulnerabilities and perform TLS assessments   as part of our compliance program. * The application must not store sensitive cardholder data (CHD) such as the card security code (CSC) or   primary access number (PAN) * The application must not display the full card number on receipts, it is recommended to mask the PAN   and show the last 4 digits. The API will return this for you for ease of receipt creation * If you are developing a website, you will be required to perform regular scans on the network where you host the   application to meet your compliance obligations * You will be required to be PCI Compliant and the application must adhere to the security standard. Further information   is available from [https://www.pcisecuritystandards.org/](https://www.pcisecuritystandards.org/) * The API verifies that the request is for a valid account and originates from a trusted source using the remote IP   address. Our application firewalls analyse data that may be an attempt to break a large number of security common   security vulnerabilities. 
 *
 * Contact: support@citypay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PaylinkFieldGuardModel model module.
 * @module model/PaylinkFieldGuardModel
 */
class PaylinkFieldGuardModel {
    /**
     * Constructs a new <code>PaylinkFieldGuardModel</code>.
     * @alias module:model/PaylinkFieldGuardModel
     */
    constructor() { 
        
        PaylinkFieldGuardModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PaylinkFieldGuardModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaylinkFieldGuardModel} obj Optional instance to populate.
     * @return {module:model/PaylinkFieldGuardModel} The populated <code>PaylinkFieldGuardModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaylinkFieldGuardModel();

            if (data.hasOwnProperty('field_type')) {
                obj['field_type'] = ApiClient.convertToType(data['field_type'], 'String');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('maxlen')) {
                obj['maxlen'] = ApiClient.convertToType(data['maxlen'], 'Number');
            }
            if (data.hasOwnProperty('minlen')) {
                obj['minlen'] = ApiClient.convertToType(data['minlen'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('regex')) {
                obj['regex'] = ApiClient.convertToType(data['regex'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PaylinkFieldGuardModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PaylinkFieldGuardModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['field_type'] && !(typeof data['field_type'] === 'string' || data['field_type'] instanceof String)) {
            throw new Error("Expected the field `field_type` to be a primitive type in the JSON string but got " + data['field_type']);
        }
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['regex'] && !(typeof data['regex'] === 'string' || data['regex'] instanceof String)) {
            throw new Error("Expected the field `regex` to be a primitive type in the JSON string but got " + data['regex']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}



/**
 * A type of HTML element that should be displayed such as text, password, url. Any HTML5 input type value may be supplied.  If a value of `date` is supplied the value format should be an ISO format YYYY-MM-DD format date i.e. 2024-03-01 If a value of `datetime-local` is supplied, the value format should be an ISO format YYYY-MM-DDTHH:mm i.e. 2024-06-01T19:30. 
 * @member {String} field_type
 */
PaylinkFieldGuardModel.prototype['field_type'] = undefined;

/**
 * A label for the field guard to display on the authentication page.
 * @member {String} label
 */
PaylinkFieldGuardModel.prototype['label'] = undefined;

/**
 * A maximum length of any value supplied in the field guard form. Used for validating entry.
 * @member {Number} maxlen
 */
PaylinkFieldGuardModel.prototype['maxlen'] = undefined;

/**
 * A minimum length of any value supplied in the field guard form. Used for validating entry.
 * @member {Number} minlen
 */
PaylinkFieldGuardModel.prototype['minlen'] = undefined;

/**
 * A field name which is used to refer to a field which is guarded.
 * @member {String} name
 */
PaylinkFieldGuardModel.prototype['name'] = undefined;

/**
 * A JavaScript regular expression value which can be used to validate the data provided in the field guard entry form. Used for validating entry.
 * @member {String} regex
 */
PaylinkFieldGuardModel.prototype['regex'] = undefined;

/**
 * A value directly associated with the field guard. Any value provided at this level will be considered as sensitive and not logged.
 * @member {String} value
 */
PaylinkFieldGuardModel.prototype['value'] = undefined;






export default PaylinkFieldGuardModel;

