/**
 * CityPay Payment API
 *  This CityPay API is a HTTP RESTful payment API used for direct server to server transactional processing. It provides a number of payment mechanisms including: Internet, MOTO, Continuous Authority transaction processing, 3-D Secure decision handling using RFA Secure, Authorisation, Refunding, Pre-Authorisation, Cancellation/Voids and Completion processing. The API is also capable of tokinsed payments using Card Holder Accounts.  ## Compliance and Security Your application will need to adhere to PCI-DSS standards to operate safely and to meet requirements set out by  Visa and MasterCard and the PCI Security Standards Council. These include  * Data must be collected using TLS version 1.2 using [strong cryptography](#enabled-tls-ciphers). We will not accept calls to our API at   lower grade encryption levels. We regularly scan our TLS endpoints for vulnerabilities and perform TLS assessments   as part of our compliance program. * The application must not store sensitive card holder data (CHD) such as the card security code (CSC) or   primary access number (PAN) * The application must not display the full card number on receipts, it is recommended to mask the PAN   and show the last 4 digits. The API will return this for you for ease of receipt creation * If you are developing a website, you will be required to perform regular scans on the network where you host the   application to meet your compliance obligations * You will be required to be PCI Compliant and the application must adhere to the security standard. Further information   is available from [https://www.pcisecuritystandards.org/](https://www.pcisecuritystandards.org/) * The API verifies that the request is for a valid account and originates from a trusted source using the remote IP   address. Our application firewalls analyse data that may be an attempt to break a large number of security common   security vulnerabilities. 
 *
 * Contact: support@citypay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.citypay_api_client);
  }
}(this, function(expect, citypay_api_client) {
  'use strict';

  var instance;

  beforeEach(function() {
    // instance = new Citypay Api Client.PaylinkTokenStatus();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PaylinkTokenStatus', function() {
    it('should create an instance of PaylinkTokenStatus', function() {
      // uncomment below and update the code to test PaylinkTokenStatus
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be.a(Citypay Api Client.PaylinkTokenStatus);
    });

    it('should have the property amount_paid (base name: "amount_paid")', function() {
      // uncomment below and update the code to test the property amount_paid
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be();
    });

    it('should have the property auth_code (base name: "auth_code")', function() {
      // uncomment below and update the code to test the property auth_code
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be();
    });

    it('should have the property card (base name: "card")', function() {
      // uncomment below and update the code to test the property card
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be();
    });

    it('should have the property created (base name: "created")', function() {
      // uncomment below and update the code to test the property created
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be();
    });

    it('should have the property datetime (base name: "datetime")', function() {
      // uncomment below and update the code to test the property datetime
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be();
    });

    it('should have the property identifier (base name: "identifier")', function() {
      // uncomment below and update the code to test the property identifier
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be();
    });

    it('should have the property is_attachment (base name: "is_attachment")', function() {
      // uncomment below and update the code to test the property is_attachment
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be();
    });

    it('should have the property is_cancelled (base name: "is_cancelled")', function() {
      // uncomment below and update the code to test the property is_cancelled
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be();
    });

    it('should have the property is_closed (base name: "is_closed")', function() {
      // uncomment below and update the code to test the property is_closed
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be();
    });

    it('should have the property is_customer_receipt_email_sent (base name: "is_customer_receipt_email_sent")', function() {
      // uncomment below and update the code to test the property is_customer_receipt_email_sent
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be();
    });

    it('should have the property is_email_sent (base name: "is_email_sent")', function() {
      // uncomment below and update the code to test the property is_email_sent
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be();
    });

    it('should have the property is_expired (base name: "is_expired")', function() {
      // uncomment below and update the code to test the property is_expired
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be();
    });

    it('should have the property is_form_viewed (base name: "is_form_viewed")', function() {
      // uncomment below and update the code to test the property is_form_viewed
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be();
    });

    it('should have the property is_merchant_notification_email_sent (base name: "is_merchant_notification_email_sent")', function() {
      // uncomment below and update the code to test the property is_merchant_notification_email_sent
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be();
    });

    it('should have the property is_open_for_payment (base name: "is_open_for_payment")', function() {
      // uncomment below and update the code to test the property is_open_for_payment
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be();
    });

    it('should have the property is_paid (base name: "is_paid")', function() {
      // uncomment below and update the code to test the property is_paid
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be();
    });

    it('should have the property is_payment_attempted (base name: "is_payment_attempted")', function() {
      // uncomment below and update the code to test the property is_payment_attempted
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be();
    });

    it('should have the property is_postback_ok (base name: "is_postback_ok")', function() {
      // uncomment below and update the code to test the property is_postback_ok
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be();
    });

    it('should have the property is_request_challenged (base name: "is_request_challenged")', function() {
      // uncomment below and update the code to test the property is_request_challenged
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be();
    });

    it('should have the property is_sms_sent (base name: "is_sms_sent")', function() {
      // uncomment below and update the code to test the property is_sms_sent
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be();
    });

    it('should have the property is_validated (base name: "is_validated")', function() {
      // uncomment below and update the code to test the property is_validated
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be();
    });

    it('should have the property last_event_date_time (base name: "last_event_date_time")', function() {
      // uncomment below and update the code to test the property last_event_date_time
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be();
    });

    it('should have the property last_payment_result (base name: "last_payment_result")', function() {
      // uncomment below and update the code to test the property last_payment_result
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be();
    });

    it('should have the property mid (base name: "mid")', function() {
      // uncomment below and update the code to test the property mid
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be();
    });

    it('should have the property payment_attempts_count (base name: "payment_attempts_count")', function() {
      // uncomment below and update the code to test the property payment_attempts_count
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be();
    });

    it('should have the property state_history (base name: "state_history")', function() {
      // uncomment below and update the code to test the property state_history
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be();
    });

    it('should have the property token (base name: "token")', function() {
      // uncomment below and update the code to test the property token
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be();
    });

    it('should have the property trans_no (base name: "trans_no")', function() {
      // uncomment below and update the code to test the property trans_no
      //var // instance = new Citypay Api Client.PaylinkTokenStatus();
      //expect(instance).to.be();
    });

  });

}));
