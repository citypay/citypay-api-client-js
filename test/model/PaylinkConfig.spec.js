/**
 * CityPay Payment API
 *  This CityPay API is a HTTP RESTful payment API used for direct server to server transactional processing. It provides a number of payment mechanisms including: Internet, MOTO, Continuous Authority transaction processing, 3-D Secure decision handling using RFA Secure, Authorisation, Refunding, Pre-Authorisation, Cancellation/Voids and Completion processing. The API is also capable of tokinsed payments using Card Holder Accounts.  ## Compliance and Security Your application will need to adhere to PCI-DSS standards to operate safely and to meet requirements set out by  Visa and MasterCard and the PCI Security Standards Council. These include  * Data must be collected using TLS version 1.2 using [strong cryptography](#enabled-tls-ciphers). We will not accept calls to our API at   lower grade encryption levels. We regularly scan our TLS endpoints for vulnerabilities and perform TLS assessments   as part of our compliance program. * The application must not store sensitive card holder data (CHD) such as the card security code (CSC) or   primary access number (PAN) * The application must not display the full card number on receipts, it is recommended to mask the PAN   and show the last 4 digits. The API will return this for you for ease of receipt creation * If you are developing a website, you will be required to perform regular scans on the network where you host the   application to meet your compliance obligations * You will be required to be PCI Compliant and the application must adhere to the security standard. Further information   is available from [https://www.pcisecuritystandards.org/](https://www.pcisecuritystandards.org/) * The API verifies that the request is for a valid account and originates from a trusted source using the remote IP   address. Our application firewalls analyse data that may be an attempt to break a large number of security common   security vulnerabilities. 
 *
 * Contact: support@citypay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.citypay_api_client);
  }
}(this, function(expect, citypay_api_client) {
  'use strict';

  var instance;

  beforeEach(function() {
    // instance = new Citypay Api Client.PaylinkConfig();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PaylinkConfig', function() {
    it('should create an instance of PaylinkConfig', function() {
      // uncomment below and update the code to test PaylinkConfig
      //var // instance = new Citypay Api Client.PaylinkConfig();
      //expect(instance).to.be.a(Citypay Api Client.PaylinkConfig);
    });

    it('should have the property acs_mode (base name: "acs_mode")', function() {
      // uncomment below and update the code to test the property acs_mode
      //var // instance = new Citypay Api Client.PaylinkConfig();
      //expect(instance).to.be();
    });

    it('should have the property custom_params (base name: "custom_params")', function() {
      // uncomment below and update the code to test the property custom_params
      //var // instance = new Citypay Api Client.PaylinkConfig();
      //expect(instance).to.be();
    });

    it('should have the property descriptor (base name: "descriptor")', function() {
      // uncomment below and update the code to test the property descriptor
      //var // instance = new Citypay Api Client.PaylinkConfig();
      //expect(instance).to.be();
    });

    it('should have the property expire_in (base name: "expire_in")', function() {
      // uncomment below and update the code to test the property expire_in
      //var // instance = new Citypay Api Client.PaylinkConfig();
      //expect(instance).to.be();
    });

    it('should have the property field_guard (base name: "field_guard")', function() {
      // uncomment below and update the code to test the property field_guard
      //var // instance = new Citypay Api Client.PaylinkConfig();
      //expect(instance).to.be();
    });

    it('should have the property lock_params (base name: "lock_params")', function() {
      // uncomment below and update the code to test the property lock_params
      //var // instance = new Citypay Api Client.PaylinkConfig();
      //expect(instance).to.be();
    });

    it('should have the property merch_logo (base name: "merch_logo")', function() {
      // uncomment below and update the code to test the property merch_logo
      //var // instance = new Citypay Api Client.PaylinkConfig();
      //expect(instance).to.be();
    });

    it('should have the property merch_terms (base name: "merch_terms")', function() {
      // uncomment below and update the code to test the property merch_terms
      //var // instance = new Citypay Api Client.PaylinkConfig();
      //expect(instance).to.be();
    });

    it('should have the property options (base name: "options")', function() {
      // uncomment below and update the code to test the property options
      //var // instance = new Citypay Api Client.PaylinkConfig();
      //expect(instance).to.be();
    });

    it('should have the property part_payments (base name: "part_payments")', function() {
      // uncomment below and update the code to test the property part_payments
      //var // instance = new Citypay Api Client.PaylinkConfig();
      //expect(instance).to.be();
    });

    it('should have the property pass_through_data (base name: "pass_through_data")', function() {
      // uncomment below and update the code to test the property pass_through_data
      //var // instance = new Citypay Api Client.PaylinkConfig();
      //expect(instance).to.be();
    });

    it('should have the property pass_through_headers (base name: "pass_through_headers")', function() {
      // uncomment below and update the code to test the property pass_through_headers
      //var // instance = new Citypay Api Client.PaylinkConfig();
      //expect(instance).to.be();
    });

    it('should have the property postback (base name: "postback")', function() {
      // uncomment below and update the code to test the property postback
      //var // instance = new Citypay Api Client.PaylinkConfig();
      //expect(instance).to.be();
    });

    it('should have the property postback_password (base name: "postback_password")', function() {
      // uncomment below and update the code to test the property postback_password
      //var // instance = new Citypay Api Client.PaylinkConfig();
      //expect(instance).to.be();
    });

    it('should have the property postback_policy (base name: "postback_policy")', function() {
      // uncomment below and update the code to test the property postback_policy
      //var // instance = new Citypay Api Client.PaylinkConfig();
      //expect(instance).to.be();
    });

    it('should have the property postback_username (base name: "postback_username")', function() {
      // uncomment below and update the code to test the property postback_username
      //var // instance = new Citypay Api Client.PaylinkConfig();
      //expect(instance).to.be();
    });

    it('should have the property redirect_delay (base name: "redirect_delay")', function() {
      // uncomment below and update the code to test the property redirect_delay
      //var // instance = new Citypay Api Client.PaylinkConfig();
      //expect(instance).to.be();
    });

    it('should have the property redirect_failure (base name: "redirect_failure")', function() {
      // uncomment below and update the code to test the property redirect_failure
      //var // instance = new Citypay Api Client.PaylinkConfig();
      //expect(instance).to.be();
    });

    it('should have the property redirect_success (base name: "redirect_success")', function() {
      // uncomment below and update the code to test the property redirect_success
      //var // instance = new Citypay Api Client.PaylinkConfig();
      //expect(instance).to.be();
    });

    it('should have the property renderer (base name: "renderer")', function() {
      // uncomment below and update the code to test the property renderer
      //var // instance = new Citypay Api Client.PaylinkConfig();
      //expect(instance).to.be();
    });

    it('should have the property return_params (base name: "return_params")', function() {
      // uncomment below and update the code to test the property return_params
      //var // instance = new Citypay Api Client.PaylinkConfig();
      //expect(instance).to.be();
    });

    it('should have the property ui (base name: "ui")', function() {
      // uncomment below and update the code to test the property ui
      //var // instance = new Citypay Api Client.PaylinkConfig();
      //expect(instance).to.be();
    });

  });

}));
